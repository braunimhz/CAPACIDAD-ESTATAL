aov(gini ~ region, data =.,) %>%
summarise(aov_vintrafam)
datos %>%
group_by(region %in% c("East Asia & Pacific", "Europe & Central Asia", "Latin America & Caribbean", "Middle East & North Africa", "North America", "South Asia", "Sub-Saharan Africa")) %>%
aov(gini ~ region, data = .) %>%
TukeyHSD()
gapminder %>%
drop_na() %>%
group_by(region, ginicat) %>%
summarise(gini = mean(gini),
n = n())
gapminder %>%
drop_na() %>%
group_by(region, ginicat) %>%
summarise(gini = mean(gini),
n = n())
datos %>%
filter(region == "Latin America & Caribbean") %>%
select(lifeexp) %>%
t.test(mu = 70)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
group_by(region %in% c("East Asia & Pacific", "Europe & Central Asia", "Latin America & Caribbean", "Middle East & North Africa", "North America", "South Asia", "Sub-Saharan Africa")) %>%
aov(gini ~ region, data = .) %>%
TukeyHSD()
datos %>%
drop_na() %>%
group_by(region, ginicat) %>%
summarise(gini = mean(gini),
n = n())
#punto 4.2
#punto 4.3
table(datos$incomecat4)
datos %>%
group_by(incomecat4) %>%
summarise(niveles = n())
datos %>%
select(incomecat4) %>%
table() %>%
chisq.test()
table(datos$incomecat4)
datos %>%
group_by(incomecat4) %>%
summarise(niveles = n())
datos %>%
select(incomecat4) %>%
table() %>%
chisq.test()
datos %>%
drop_na() %>%
group_by(region, ginicat) %>%
summarise(gini = mean(gini),
n = n())
table(datos$incomecat4)
datos %>%
group_by(incomecat4) %>%
summarise(niveles = n())
datos %>%
select(incomecat4) %>%
table() %>%
chisq.test()
datos %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
#punto 2
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
#punto 2
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
#punto 2
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
#punto 2
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
#punto 2
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
library(readxl)
taller2 <- read_excel("C:/Users/nikko/Downloads/taller2.xlsx")
library(readxl)
taller2 <- read_excel("C:/Users/nikko/Downloads/taller2.xlsx")
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
datos %>%
filter(region %in% c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
t.test(gini ~ region, data = .,
alternative = "two.sided",
conf.level = 0.95)
library(tidyverse)
library(readxl)
datos %>%
group_by(region) %>%
filter(region %in%  c("Latin America & Caribbean","Sub-Saharan Africa")) %>%
summarise(minimo = min(gini), maximo= max(gini),
promedio = mean(gini),
desviacion_estandar = sd(gini),
numero_observaciones = n())
datos %>%
filter(region == "Latin America & Caribbean") %>%
summarise(promedio = mean(lifeexp),
minimo = min(lifeexp),
maximo = max(lifeexp),
numero_observaciones = n(),
desviacion_estandar = sd(lifeexp))
#punto 1.2
table(datos$incomecat4)
datos %>%
group_by(incomecat4) %>%
summarise(niveles = n())
datos %>%
select(incomecat4) %>%
table() %>%
chisq.test()
library(ggplot2)
library(tidyverse)
if (!require(broom)) install.packages('broom') # Paquete para presentar resultados de modelos  (https://www.rdocumentation.org/packages/broom/versions/0.7.5)
library(broom)
if (!require(sjPlot)) install.packages('sjPlot') # Paquete para visualización de estadísticos en Ciencias Sociales (https://strengejacke.github.io/sjPlot/index.html)
library(sjPlot)
if (!require(sjmisc)) install.packages('sjmisc')
library(sjmisc)
if (!require(sjlabelled)) install.packages('sjlabelled')
library(sjlabelled)
if (!require(psych)) install.packages('psych') # Estadístico descriptivos
library(psych)
vdem <- readRDS('vdem2021.rds')
`vdem2021 (1)` <- readRDS("C:/Users/nikko/Downloads/vdem2021 (1).rds")
vdem <- readRDS('vdem2021.rds')
View(`vdem2021 (1)`)
View(`vdem2021 (1)`)
poliarquia <- vdem %>%
select(v2x_polyarchy, v2psbars, v2clgencl, v2peapssoc, v2x_civlib) %>%
drop_na()
taller3 <- readRDS("~/taller3.rds")
View(taller3)
View(taller3)
library(tidyverse)
library(psych)
library(broom)
# cargar datos
datos <- readRDS("taller3.rds")
describe(taller3)
seguridad %>%
select(lifeexp, gini, gpdppercapita, regimen) %>%
psych::describe()
datos <- readRDS("taller3.rds")
describe(taller3)
datos %>%
select(lifeexp, gini, gpdppercapita, regimen) %>%
psych::describe()
describe(seguridad)
seguridad <- readRDS("seguridad.rds")
describe(seguridad)
seguridad %>%
select(aoj11r, aoj12r, it1r, vicdelinc, amenaza, b10a, b18, genero) %>%
psych::describe()
describe(taller3)
datos %>%
select(lifeexp, gini, gpdppercapita, regimen) %>%
psych::describe()
datos <- readRDS("taller3.rds")
describe(taller3)
datos %>%
select(lifeexp, gini, gdppercapita, regimen) %>%
psych::describe()
mod_datos <- lm(lifeexp ~ gini + gdppercapita + regimen,
data = datos)
summary(mod_seguridad)
mod_datos <- lm(lifeexp ~ gini + gdppercapita + regimen,
data = datos)
summary(mod_datos)
confint(mod_datos)
tidy(mod_datos)
datos %>%
select(lifeexp, gini, gdppercapita, regimen) %>%
psych::describe()
mod_datos <- lm(lifeexp ~ gini + gdppercapita + regimen,
data = datos)
summary(mod_datos)
confint(mod_datos)
tidy(mod_datos)
mod_datos <- lm(lifeexp ~ gini + gdppercapita + regimen,
data = datos)
summary(mod_datos)
tidy(mod_datos)
confint(mod_datos)
tab_model(mod_datos)
library(ggplot2)
library(tidyverse)
if (!require(broom)) install.packages('broom') # Paquete para presentar resultados de modelos  (https://www.rdocumentation.org/packages/broom/versions/0.7.5)
library(broom)
if (!require(sjPlot)) install.packages('sjPlot') # Paquete para visualización de estadísticos en Ciencias Sociales (https://strengejacke.github.io/sjPlot/index.html)
library(sjPlot)
if (!require(sjmisc)) install.packages('sjmisc')
library(sjmisc)
if (!require(sjlabelled)) install.packages('sjlabelled')
library(sjlabelled)
if (!require(psych)) install.packages('psych') # Estadístico descriptivos
library(psych)
tab_model(mod_datos)
summary(mod_datos)
tidy(mod_datos)
confint(mod_datos
confint(mod_datos)
confint(mod_datos)
summary(mod_datos)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
<p>Visita mi sitio favorito:</p>
## Including Plots
# ¡Bienvenido!
Estoy aprendiendo a crear páginas web usando **R Markdown**.
# Visualizar la matriz de correlaciones
corrplot(correlaciones, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
install.packages("haven")
install.packages("corrplot")
install.packages("dplyr")
library(corrplot)
library(haven)
library(dplyr)
#leer datos .dta en R
datos_c <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_candidate_level.dta")
datos_m <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_municipal_level.dta")
#Estadisticos descriptivos de las variables medidas para compra de votos
summary(datos_m %>%
select(starts_with("z_likelihood_misdeed_")))
#Matriz de correlacion
correlaciones <- cor(datos_m[, c("z_likelihood_misdeed_1",
"z_likelihood_misdeed_2",
"z_likelihood_misdeed_3",
"z_likelihood_misdeed_4",
"z_likelihood_misdeed_5",
"z_likelihood_misdeed_6")],
use = "complete.obs")
#Tabla de correlaciones entre las variables medidas para compra de votos
nombres <- c("intimidación de votantes",
"compra de votos",
"fraude de registro",
"fraude electoral",
"campaña de servidores públicos",
"publicidad ilícita")
# Cambiar nombres de columnas Y filas
colnames(correlaciones) <- nombres
rownames(correlaciones) <- nombres
# Visualizar la matriz de correlaciones
corrplot(correlaciones, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
library(corrplot)
library(haven)
library(dplyr)
summary(datos_m %>%
select(starts_with("z_likelihood_misdeed_")))
:
skimr::datos_m[, c("z_likelihood_misdeed_1",
"z_likelihood_misdeed_2",
"z_likelihood_misdeed_3",
"z_likelihood_misdeed_4",
"z_likelihood_misdeed_5",
"z_likelihood_misdeed_6")]
skim(datos_m[, c("z_likelihood_misdeed_1",
"z_likelihood_misdeed_2",
"z_likelihood_misdeed_3",
"z_likelihood_misdeed_4",
"z_likelihood_misdeed_5",
"z_likelihood_misdeed_6")])
install.packages("skimr")
library(skimr)
skim(datos_m[, c("z_likelihood_misdeed_1",
"z_likelihood_misdeed_2",
"z_likelihood_misdeed_3",
"z_likelihood_misdeed_4",
"z_likelihood_misdeed_5",
"z_likelihood_misdeed_6")])
correlaciones_2 <- cor(datos_m[, c("media_irreg_intimidacion",
"media_irreg_compra",
"media_irreg_trashumancia",
"media_irreg_fraud",
"media_irreg_intervencion",
"media_irreg_publicidad")],
use = "complete.obs")
corrplot(correlaciones_2, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
library(corrplot)
corrplot(correlaciones_2, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
summarize(datos_m$media_irreg_publicidad)
summary(datos_m$media_irreg_publicidad)
correlaciones_2 <- cor(datos_m[, c("media_irreg_intimidacion",
"media_irreg_compra",
"media_irreg_trashumancia",
"media_irreg_fraud",
"media_irreg_intervencion")],
use = "complete.obs")
corrplot(correlaciones_2, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
# Visualizar la matriz de correlaciones
corrplot(correlaciones, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
knitr::opts_chunk$set(echo = TRUE)
#instalacion de paquetes necesarios
library(corrplot)
library(haven)
library(dplyr)
#leer datos .dta en R
datos_c <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_candidate_level.dta")
datos_m <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_municipal_level.dta")
#Tabla de correlaciones entre las variables medidas para compra de votos
correlaciones_2 <- cor(datos_m[, c("media_irreg_intimidacion",
"media_irreg_compra",
"media_irreg_trashumancia",
"media_irreg_fraud",
"media_irreg_intervencion")],
use = "complete.obs")
corrplot(correlaciones_2, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
correlaciones_2 <- cor(datos_m[, c("media_irreg_intimidacion",
"media_irreg_compra",
"media_irreg_trashumancia",
"media_irreg_fraud",
"media_irreg_intervencion")],
use = "complete.obs")
corrplot(correlaciones_2, method = "color", type = "upper",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45)
library(stargazer)
install.packages("stargazer")
library(stargazer)
modelo <- lm(media_irreg_intimidacion ~ media_irreg_compra +
media_irreg_trashumancia +
media_irreg_fraud +
media_irreg_intervencion,
data = datos_m)
modelo <- lm(media_irreg_intimidacion ~ media_irreg_compra +
media_irreg_trashumancia +
media_irreg_fraud +
media_irreg_intervencion,
data = datos_m)
install.packages("stargazer")
library(stargazer)
modelo <- lm(media_irreg_intimidacion ~ media_irreg_compra +
media_irreg_trashumancia +
media_irreg_fraud +
media_irreg_intervencion,
data = datos_m)
datos_m <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_municipal_level.dta")
library(skimr)
library(corrplot)
library(haven)
library(dplyr)
datos_c <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_candidate_level.dta")
datos_m <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_municipal_level.dta")
modelo <- lm(media_irreg_intimidacion ~ media_irreg_compra +
media_irreg_trashumancia +
media_irreg_fraud +
media_irreg_intervencion,
data = datos_m)
modelo <- lm(media_irreg_intimidacion ~ media_irreg_compra +
media_irreg_trashumancia +
media_irreg_fraud +
media_irreg_intervencion,
data = datos_m)
install.packages("stargazer")
library(stargazer)
stargazer(modelo, type = "text")
library(haven)
library(dplyr)
panel <- read_dta("PANEL_BUEN_GOBIERNO(2024).dta")
setwd("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Codigo")
library(haven)
library(dplyr)
panel <- read_dta("PANEL_BUEN_GOBIERNO(2024).dta")
library(haven)
library(dplyr)
panel <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/PANEL_BUEN_GOBIERNO(2024).dta")
datos_m <- read_dta("C:/Users/nikko/OneDrive/Documents/Semillero R/CAPACIDAD-ESTATAL/Paquete Rep. Nat/Final/main_data_municipal_level.dta")
datos_unidos <- full_join(panel, datos_m, by = c("codmpio" = "ID"))
View(datos_unidos)
View(datos_unidos)
